{
	"kind": "ReplicationController",
	"apiVersion": "v1",
	"metadata": {
		"name": "bigbinf-stack",
		"labels": {
			"app": "bigbinf-stack"
		}
	},
	"spec": {
		"replicas": 1,
		"selector": {
			"app": "bigbinf-stack"
		},
		"template": {
			"metadata": {
				"labels": {
					"app": "bigbinf-stack"
				}
			},
			"spec": {
				"containers": [
					{
						"name": "docker-registry",
						"image": "bigbinf/registry",
						"env":[
							{
								"name": "REGISTRY_HTTP_TLS_CERTIFICATE",
								"value": "/certs/registry.crt"
							},
							{
								"name": "REGISTRY_HTTP_TLS_KEY",
								"value": "/certs/registry.key"
							}
						],
						
						"ports": [
							{
								"containerPort": 5000,
								"port": 5000,
								"protocol": "TCP"
							}
						],
						"volumeMounts": [
							{
								"name": "docker-registry-cache",
								"mountPath": "/var/lib/registry"
							}
						],
						"imagePullPolicy": "IfNotPresent"
					},
					{
						"name": "bigbinf-builder",
						"image": "bigbinf/builder",
						"securityContext":{
							"privileged": true
						},
						"env":[
							{
								"name": "PORT",
								"value": "5002"
							}
						],
						
						"ports": [
							{
								"containerPort": 5002,
								"port": 5002,
								"protocol": "TCP"
							}
						],
						"volumeMounts": [
							{
								"name": "docker-cache",
								"mountPath": "/var/lib/docker"
							}
						],
						"imagePullPolicy": "IfNotPresent"
					},
					{
						"name": "discovery-service",
						"image": "bigbinf/discovery-service",
												
						"ports": [
							{
								"containerPort": 5004,
								"port": 5004,
								"hostPort": 5004,
								"protocol": "TCP"
							}
						],
						"imagePullPolicy": "IfNotPresent"
					}
				],
				"volumes": [
					{
						"name": "docker-cache",
						"hostPath":{
							"path": "/mnt/rbd2/sanbi1/docker-cache"
						}
					},
					{
						"name": "docker-registry-cache",
						"hostPath":{
							"path": "/mnt/rbd2/sanbi1/docker-registry-cache"
						}
					}
				]
				
			}
		}
	}
}
